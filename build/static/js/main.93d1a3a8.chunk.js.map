{"version":3,"sources":["components/Todos.js","shared/TodoContext.js","hooks/useArray.js","components/TodoList.js","components/TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","todos","deleteTodo","changeComplete","class","username","task","type","checked","completed","onClick","id","initialState","TodoContext","React","createContext","TodoProvider","props","initialValue","useState","value","setValue","add","useCallback","toAdd","arr","map","val","clear","delete","filter","v","useArray","Provider","children","TodoList","setFilter","sortKey","setSortKey","sortOrder","setSortOrder","useContext","className","placeholder","onChange","e","target","filterLC","toLowerCase","usernameLC","taskLC","includes","sort","a","b","t","index","TodoApp","setUsername","setTask","setId","useMemo","console","log","htmlFor","newTodo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93d1a3a8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst Todos = ({ todos, deleteTodo, changeComplete }) => {\n  return (\n    <>\n      <div class=\"todoArea\">\n        {todos.username} - {todos.task}\n        <input\n          type=\"checkbox\"\n          checked={todos.completed}\n          onClick={() => changeComplete(todos.id)}\n        />\n        <button onClick={() => deleteTodo(todos.id)}>x</button>\n      </div>\n    </>\n  );\n};\n\nexport default Todos;\n","import React from \"react\";\nimport { useArray } from \"../hooks/useArray\";\n\nconst initialState = [\n  { id: 1, completed: true, username: \"Emily\", task: \"work at the saloon\" },\n  { id: 2, completed: false, username: \"Maru\", task: \"assist at the clinic\" },\n  {\n    id: 3,\n    completed: true,\n    username: \"Linus\",\n    task: \"forage near the mountain\",\n  },\n  { id: 4, completed: false, username: \"Pam\", task: \"drive bus to desert\" },\n  {\n    id: 5,\n    completed: false,\n    username: \"Sebastian\",\n    task: \"band practice with Sam\",\n  },\n  { id: 6, completed: false, username: \"Elliott\", task: \"finish novel\" },\n];\n\nexport const TodoContext = React.createContext(null);\n\nconst TodoProvider = (props) => {\n  const todos = useArray(initialState);\n  // todos.add;\n  return (\n    <TodoContext.Provider value={todos}>{props.children}</TodoContext.Provider>\n  );\n};\n\nexport default TodoProvider;\n","import { useCallback, useState } from \"react\";\nexport const useArray = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n  return {\n    value,\n\n    add: useCallback((toAdd) => setValue((value) => [...value, toAdd])),\n    changeComplete: useCallback((id) =>\n      setValue((arr) => {\n        let newArr = arr.map((val) => {\n          if (val.id === id) {\n            return { ...val, completed: !val.completed };\n          }\n          return val;\n        });\n        return newArr;\n      })\n    ),\n    clear: useCallback(() => setValue([])),\n    delete: useCallback((id) =>\n      setValue((arr) => arr.filter((v) => v && v.id !== id))\n    ),\n  };\n};\n","import React, { useState, useContext } from \"react\";\nimport Todos from \"./Todos\";\nimport { TodoContext } from \"../shared/TodoContext\";\n\n// a field to filter certain items\n// add a field/button that allows you to sort items\n\n//                ({props})\nconst TodoList = () => {\n  // console.log(props.todoProps);\n  const [filter, setFilter] = useState(\"\");\n  const [sortKey, setSortKey] = useState(\"username\");\n  const [sortOrder, setSortOrder] = useState(1);\n  const todos = useContext(TodoContext);\n  // filter when filter changes OR when the props change\n  // create a new filtered piece of state\n  // sort when filteredArray changes or sortKey/sortOrder\n  // sort when sortOrder/sortKey/props change\n  // sort and filter when sortOrder, sortKey, filter, or props change\n\n  return (\n    <>\n      <div className=\"center\">\n        <input\n          className=\"display\"\n          value={filter}\n          placeholder=\"Filter\"\n          onChange={(e) => {\n            setFilter(e.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"center display\">\n        <label>Sort</label>\n        <select value={sortKey} onChange={(e) => setSortKey(e.target.value)}>\n          <option value=\"id\">ID</option>\n          <option value=\"username\">Name</option>\n          <option value=\"task\">Task</option>\n        </select>\n\n        <label>Order</label>\n        <select\n          value={sortOrder}\n          onChange={(e) => setSortOrder(e.target.value)}\n        >\n          <option value=\"1\">A-Z</option>\n          <option value=\"-1\">Z-A</option>\n        </select>\n      </div>\n      <div className=\"center display\">\n        <button onClick={() => todos.clear()}>Clear All Todos</button>\n      </div>\n      <div className=\"listArea\">\n        {todos.value\n          .filter((val) => {\n            // case insensitive\n            // username or task text\n            // includes anywhere\n            let filterLC = filter.toLowerCase();\n            let usernameLC = val.username.toLowerCase();\n            let taskLC = val.task.toLowerCase();\n            return usernameLC.includes(filterLC) || taskLC.includes(filterLC)\n              ? true\n              : false;\n          })\n          .sort((a, b) => {\n            if (sortKey === \"id\") {\n              return (a.id - b.id) * sortOrder;\n            }\n            if (a[sortKey].toLowerCase() < b[sortKey].toLowerCase()) {\n              return -1 * sortOrder;\n            }\n            if (a[sortKey].toLowerCase() > b[sortKey].toLowerCase()) {\n              return 1 * sortOrder;\n            }\n            return 0;\n          })\n          .map((t, index) => {\n            return (\n              <Todos\n                deleteTodo={todos.delete}\n                changeComplete={todos.changeComplete}\n                todos={t}\n                key={index}\n              />\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default TodoList;\n","import React, { useContext, useMemo, useState } from \"react\";\nimport TodoList from \"./TodoList\";\nimport { TodoContext } from \"../shared/TodoContext\";\n\nconst TodoApp = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [task, setTask] = useState(\"\");\n  // const [todos, setTodos] = useState([]);\n  const [id, setId] = useState([7]);\n  const todos = useContext(TodoContext);\n\n  const numTodos = useMemo(\n    () =>\n      todos.value.filter((val) => {\n        console.log(\"IN MEMO\");\n        return val.completed;\n      }),\n    [todos.value]\n  );\n\n  return (\n    <>\n      <h1 className=\"center\">To Do List:</h1>\n      <div className=\"inputArea center display\">\n        <label htmlFor=\"username\"></label>\n        <input\n          id=\"username\"\n          className=\"username\"\n          value={username}\n          placeholder=\"Name\"\n          onChange={(e) => setUsername(e.target.value)}\n          type=\"text\"\n        />\n      </div>\n      <div className=\"inputArea center\">\n        <label htmlFor=\"task\"></label>\n        <input\n          id=\"task\"\n          value={task}\n          placeholder=\"Task\"\n          onChange={(e) => setTask(e.target.value)}\n          type=\"text\"\n        />\n      </div>\n      <p className=\"center\">\n        {username} {task}\n      </p>\n      <div className=\"center\">\n        <button\n          className=\"display\"\n          type=\"submit\"\n          value=\"addTodo\"\n          onClick={() => {\n            let newTodo = { id, task, completed: false, username };\n            todos.add(newTodo);\n            setId(id + 1);\n            setUsername(\"\");\n            setTask(\"\");\n          }}\n        >\n          Submit\n        </button>\n      </div>\n      <div>\n        <TodoList />\n      </div>\n    </>\n  );\n};\n\nexport default TodoApp;\n","import \"./App.css\";\nimport TodoApp from \"./components/TodoApp\";\nimport TodoProvider from \"./shared/TodoContext\";\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <div className=\"App background\">\n        <TodoApp />\n      </div>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}