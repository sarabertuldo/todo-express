{"version":3,"sources":["components/TodoList.js","components/Todos.js","components/TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","console","log","todos","useState","setSort","class","type","value","onClick","sortedTodos","sort","a","b","username","map","t","index","Todos","task","TodoApp","setUsername","setTask","setTodos","htmlFor","id","className","placeholder","onChange","e","target","newTodo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA4CeA,EAzCE,SAACC,GAChBC,QAAQC,IAAIF,EAAMG,OADQ,MAEEC,mBAAS,IAFX,gCAGFA,mBAAS,KAHP,mBAGbC,GAHa,WAI1B,OACE,qCACE,qBAAKC,MAAM,SAAX,SACE,wBACEC,KAAK,SACLC,MAAM,YACNC,QAAS,aAHX,sBAUF,qBAAKH,MAAM,SAAX,SACE,wBACEC,KAAK,SACLC,MAAM,YACNC,QAAS,WACP,IAAIC,EAAcV,EAAMG,MAAMQ,MAAK,SAACC,EAAGC,GAAJ,OACjCD,EAAEE,SAAWD,EAAEC,SAAW,GAAK,KAEjCT,EAAQ,CAACK,IACTT,QAAQC,IAAIQ,IARhB,wBAcF,qBAAKJ,MAAM,WAAX,SACGN,EAAMG,MAAMY,KAAI,SAACC,EAAGC,GACnB,OAAO,cAAC,EAAD,CAAOd,MAAOa,GAAQC,YClBxBC,EAVD,SAAClB,GACb,OACE,mCACE,sBAAKM,MAAM,WAAX,UACGN,EAAMG,MAAMW,SADf,MAC4Bd,EAAMG,MAAMgB,WCoD/BC,EA7DC,SAACpB,GAAW,IAAD,EACOI,mBAAS,IADhB,mBAClBU,EADkB,KACRO,EADQ,OAEDjB,mBAAS,IAFR,mBAElBe,EAFkB,KAEZG,EAFY,OAGClB,mBAAS,IAHV,mBAGlBD,EAHkB,KAGXoB,EAHW,KAKzB,OACE,qCACE,oBAAIjB,MAAM,SAAV,yBACA,sBAAKA,MAAM,mBAAX,UACE,uBAAOkB,QAAQ,aACf,uBACEC,GAAG,WACHC,UAAU,WACVlB,MAAOM,EACPa,YAAY,WACZC,SAAU,SAACC,GAAD,OAAOR,EAAYQ,EAAEC,OAAOtB,QACtCD,KAAK,YAGT,sBAAKD,MAAM,mBAAX,UACE,uBAAOkB,QAAQ,SACf,uBACEC,GAAG,OACHjB,MAAOW,EACPQ,YAAY,WACZC,SAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOtB,QAClCD,KAAK,YAGT,oBAAGD,MAAM,SAAT,UACGQ,EADH,IACcK,KAEd,qBAAKb,MAAM,SAAX,SACE,yBACEC,KAAK,SACLC,MAAM,UACNC,QAAS,WACP,IAAIsB,EAAU,CACZZ,OACAL,YAEFb,QAAQC,IAAI6B,GACZR,EAAS,GAAD,mBAAKpB,GAAL,CAAY4B,KACpBV,EAAY,IACZC,EAAQ,KAXZ,UAcG,IAdH,cAkBF,8BACE,cAAC,EAAD,CAAUnB,MAAOA,MAEnB,qBAAKG,MAAM,SAAX,SACE,cAAC,EAAD,CAAOH,MAAOA,UChDP6B,MARf,WACE,OACE,qBAAKN,UAAU,iBAAf,SACE,cAAC,EAAD,OCMSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.44cb20b4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Todos from \"./Todos\";\n\nconst TodoList = (props) => {\n  console.log(props.todos);\n  const [filter, setFilter] = useState(\"\");\n  const [sort, setSort] = useState(\"\");\n  return (\n    <>\n      <div class=\"center\">\n        <button\n          type=\"submit\"\n          value=\"setFilter\"\n          onClick={() => {\n            let filteredTodos;\n          }}\n        >\n          Filter\n        </button>\n      </div>\n      <div class=\"center\">\n        <button\n          type=\"submit\"\n          value=\"sortTodos\"\n          onClick={() => {\n            let sortedTodos = props.todos.sort((a, b) =>\n              a.username > b.username ? 1 : -1\n            );\n            setSort([sortedTodos]);\n            console.log(sortedTodos);\n          }}\n        >\n          Sort A-Z\n        </button>\n      </div>\n      <div class=\"listArea\">\n        {props.todos.map((t, index) => {\n          return <Todos todos={t} key={index} />;\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport TodoApp from \"./TodoApp\";\nimport TodoList from \"./TodoList\";\n\n// change the background color of completed items to green\n// add a key for completed/incomplete and a button to allow for that item to be toggled together\n// the ability to keep track of what item was mostly recently added\n// buttons to delete items from the list\n\nconst Todos = (props) => {\n  return (\n    <>\n      <div class=\"todoArea\">\n        {props.todos.username} - {props.todos.task}\n      </div>\n    </>\n  );\n};\n\nexport default Todos;\n","import React, { useState } from \"react\";\nimport Todos from \"./Todos\";\nimport TodoList from \"./TodoList\";\n\nconst TodoApp = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [task, setTask] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  return (\n    <>\n      <h1 class=\"center\">To Do List:</h1>\n      <div class=\"inputArea center\">\n        <label htmlFor=\"username\"></label>\n        <input\n          id=\"username\"\n          className=\"username\"\n          value={username}\n          placeholder=\"Add name\"\n          onChange={(e) => setUsername(e.target.value)}\n          type=\"text\"\n        />\n      </div>\n      <div class=\"inputArea center\">\n        <label htmlFor=\"task\"></label>\n        <input\n          id=\"task\"\n          value={task}\n          placeholder=\"Add task\"\n          onChange={(e) => setTask(e.target.value)}\n          type=\"text\"\n        />\n      </div>\n      <p class=\"center\">\n        {username} {task}\n      </p>\n      <div class=\"center\">\n        <button\n          type=\"submit\"\n          value=\"addTodo\"\n          onClick={() => {\n            let newTodo = {\n              task,\n              username,\n            };\n            console.log(newTodo);\n            setTodos([...todos, newTodo]);\n            setUsername(\"\");\n            setTask(\"\");\n          }}\n        >\n          {\" \"}\n          Submit\n        </button>\n      </div>\n      <div>\n        <TodoList todos={todos} />\n      </div>\n      <div class=\"center\">\n        <Todos todos={todos} />\n      </div>\n    </>\n  );\n};\n\nexport default TodoApp;\n","import \"./App.css\";\nimport TodoApp from \"./components/TodoApp\";\n\nfunction App() {\n  return (\n    <div className=\"App background\">\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}